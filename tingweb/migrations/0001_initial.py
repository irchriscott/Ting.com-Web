# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-06-05 09:15
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import tingweb.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tingadmin', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField()),
                ('name', models.CharField(max_length=200)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.TextField()),
                ('phone', models.CharField(max_length=15)),
                ('image', models.ImageField(upload_to=tingweb.models.administrator_image_path)),
                ('admin_type', models.CharField(blank=True, max_length=100)),
                ('badge_number', models.CharField(blank=True, max_length=200, null=True)),
                ('is_disabled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdministratorResetPassword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=200)),
                ('token', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expired_at', models.DateTimeField()),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Administrator')),
            ],
        ),
        migrations.CreateModel(
            name='AdminPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Administrator')),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20)),
                ('token', models.CharField(max_length=100)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=18)),
                ('currency', models.CharField(blank=True, max_length=100, null=True)),
                ('is_requested', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('is_complete', models.BooleanField(default=False)),
                ('paid_by', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Administrator')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=100)),
                ('people', models.IntegerField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('is_complete', models.BooleanField(default=False)),
                ('is_canceled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('country', models.CharField(max_length=200)),
                ('town', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('latitude', models.CharField(max_length=200)),
                ('longitude', models.CharField(max_length=200)),
                ('place_id', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryRestaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingadmin.RestaurantCategory')),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('slug', models.CharField(max_length=250)),
                ('dish_time', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('ingredients', models.TextField(blank=True, null=True)),
                ('show_ingredients', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=18)),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('currency', models.CharField(max_length=50)),
                ('is_countable', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=1)),
                ('is_available', models.BooleanField(default=True)),
                ('has_drink', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Administrator')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Branch')),
            ],
        ),
        migrations.CreateModel(
            name='DishFood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_countable', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Dish')),
            ],
        ),
        migrations.CreateModel(
            name='DishImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=tingweb.models.food_image_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Dish')),
            ],
        ),
        migrations.CreateModel(
            name='Drink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('slug', models.CharField(max_length=250)),
                ('drink_type', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('ingredients', models.TextField(blank=True, null=True)),
                ('show_ingredients', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=18)),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('currency', models.CharField(max_length=50)),
                ('is_countable', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=1)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Administrator')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Branch')),
            ],
        ),
        migrations.CreateModel(
            name='DrinkImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=tingweb.models.food_image_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('drink', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Drink')),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('slug', models.CharField(max_length=250)),
                ('food_type', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('ingredients', models.TextField(blank=True, null=True)),
                ('show_ingredients', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=18)),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('currency', models.CharField(max_length=50)),
                ('is_countable', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=1)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Administrator')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Branch')),
            ],
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('slug', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(upload_to=tingweb.models.category_image_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Administrator')),
            ],
        ),
        migrations.CreateModel(
            name='FoodImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=tingweb.models.food_image_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Food')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_type', models.IntegerField()),
                ('menu_id', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Administrator')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Branch')),
            ],
        ),
        migrations.CreateModel(
            name='MenuReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Menu')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=100)),
                ('quantity', models.IntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=18)),
                ('currency', models.CharField(max_length=100)),
                ('is_declined', models.BooleanField(default=False)),
                ('reasons', models.TextField(blank=True, null=True)),
                ('is_delivered', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Bill')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Menu')),
            ],
        ),
        migrations.CreateModel(
            name='Placement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=100)),
                ('people', models.IntegerField()),
                ('is_done', models.BooleanField(default=False)),
                ('need_someone', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tingweb.Booking')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Branch')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField()),
                ('name', models.CharField(max_length=200)),
                ('motto', models.TextField(blank=True, null=True)),
                ('slug', models.CharField(max_length=255)),
                ('logo', models.ImageField(upload_to=tingweb.models.restaurant_logo_path)),
                ('country', models.CharField(max_length=200)),
                ('town', models.CharField(max_length=255)),
                ('opening', models.TimeField()),
                ('closing', models.TimeField()),
                ('is_authenticated', models.BooleanField(default=False)),
                ('is_disabled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(blank=True, max_length=100, null=True)),
                ('use_default_currency', models.BooleanField(default=False)),
                ('languages', models.CharField(blank=True, max_length=254, null=True)),
                ('tax', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('assign_table_to_waiter', models.BooleanField(default=True)),
                ('cancel_late_booking', models.IntegerField(blank=True, default=30, null=True)),
                ('waiter_see_all_orders', models.BooleanField(default=False)),
                ('book_with_advance', models.BooleanField(default=False)),
                ('booking_advance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=18, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tingweb.Administrator')),
                ('restaurant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=tingweb.models.restaurant_image_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantLicenceKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingadmin.TingLicenceKey')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=100)),
                ('max_people', models.IntegerField()),
                ('number', models.CharField(max_length=20)),
                ('location', models.IntegerField()),
                ('chair_type', models.IntegerField()),
                ('description', models.TextField()),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Branch')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField()),
                ('name', models.CharField(max_length=200)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.TextField()),
                ('image', models.ImageField(upload_to=tingweb.models.user_image_path)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=200)),
                ('town', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('latitude', models.CharField(max_length=200)),
                ('longitude', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.User')),
            ],
        ),
        migrations.CreateModel(
            name='UserCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingadmin.RestaurantCategory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.User')),
            ],
        ),
        migrations.CreateModel(
            name='UserRestaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.User')),
            ],
        ),
        migrations.AddField(
            model_name='restaurantreview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.User'),
        ),
        migrations.AddField(
            model_name='placement',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant'),
        ),
        migrations.AddField(
            model_name='placement',
            name='table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.RestaurantTable'),
        ),
        migrations.AddField(
            model_name='placement',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.User'),
        ),
        migrations.AddField(
            model_name='placement',
            name='waiter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tingweb.Administrator'),
        ),
        migrations.AddField(
            model_name='menureview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.User'),
        ),
        migrations.AddField(
            model_name='menu',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant'),
        ),
        migrations.AddField(
            model_name='foodcategory',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant'),
        ),
        migrations.AddField(
            model_name='food',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.FoodCategory'),
        ),
        migrations.AddField(
            model_name='food',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant'),
        ),
        migrations.AddField(
            model_name='drink',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant'),
        ),
        migrations.AddField(
            model_name='dishfood',
            name='food',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Food'),
        ),
        migrations.AddField(
            model_name='dish',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.FoodCategory'),
        ),
        migrations.AddField(
            model_name='dish',
            name='drink',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tingweb.Drink'),
        ),
        migrations.AddField(
            model_name='dish',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant'),
        ),
        migrations.AddField(
            model_name='categoryrestaurant',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant'),
        ),
        migrations.AddField(
            model_name='branch',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant'),
        ),
        migrations.AddField(
            model_name='booking',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Branch'),
        ),
        migrations.AddField(
            model_name='booking',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant'),
        ),
        migrations.AddField(
            model_name='booking',
            name='table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.RestaurantTable'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.User'),
        ),
        migrations.AddField(
            model_name='bill',
            name='placement',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Placement'),
        ),
        migrations.AddField(
            model_name='administrator',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Branch'),
        ),
        migrations.AddField(
            model_name='administrator',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tingweb.Restaurant'),
        ),
    ]
